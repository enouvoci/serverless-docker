name: Docker

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
      - 'v*.*.*-node*'
  schedule:
    - cron: '0 0 * * 4'
  pull_request:
    branches:
      - 'master'

env:
  NODE_VERSION: lts-buster

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Setup build environment variables
        id: build-env
        run: |
          NODE_VERSION=${{env.NODE_VERSION}}
          if [ "$GITHUB_REF_TYPE" == "tag" ] ; then
            SERVERLESS_VERSION=${GITHUB_REF_NAME%%-*}
            SERVERLESS_VERSION=${SERVERLESS_VERSION#*v}
            [[ $GITHUB_REF_NAME == *"-node"* ]] && NODE_VERSION=${GITHUB_REF_NAME#*-node}
          else
            SERVERLESS_VERSION=$(docker run --rm node:${{env.NODE_VERSION}} npm show serverless version)
            
          fi
          echo "NODE_VERSION: $NODE_VERSION"
          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_ENV
          echo "SERVERLESS_VERSION: $SERVERLESS_VERSION"
          echo "SERVERLESS_VERSION=$SERVERLESS_VERSION" >> $GITHUB_ENV
          echo "::set-output name=serverless_version::$SERVERLESS_VERSION"
          echo "::set-output name=node_version::$NODE_VERSION"
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            enouvoci/serverless-docker
          # generate Docker tags based on the following events/attributes
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=match,pattern=v(.*),group=1,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=schedule,value=latest,enable=true
            type=schedule,value=${{ steps.build-env.outputs.serverless_version }},enable=true
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SERVERLESS_VERSION=${{ steps.build-env.outputs.serverless_version }}
            NODE_VERSION=${{ steps.build-env.outputs.node_version }}
